
char *kth_word_in_mth_sentence_of_nth_paragraph(char ****document, int k, int m, int n) {
    return document[n-1][m-1][k-1];
}

char **kth_sentence_in_mth_paragraph(char ****document, int k, int m) {
    return document[m-1][k-1];
}

char ***kth_paragraph(char ****document, int k) {
    return document[k-1];
}

int counter(char *s, char *delim) {
    char *token, *saveptr, *tmp;
    int count = 0;

    if ((NULL == s) || (NULL == delim)) {
        return 0;
    }

    tmp = strdup(s);
    token = strtok_r(tmp, delim, &saveptr);
    while (token != NULL) {
        token = strtok_r(NULL, delim, &saveptr);
        count++;
    }

    if (NULL != tmp) {
        free(tmp);
    }

    return count;
}

char ****get_document(char *text) {
    char *p, *p_save_ptr;
    char *s, *s_save_ptr;
    char *w, *w_save_ptr;
    char ****document;
    int count_paragraph, count_sentence, count_word;
    int i, j, k;

    count_paragraph = counter(text, "\n");
    document = (char ****) malloc(count_paragraph * sizeof(char ***));

    i = 0;
    for (p = strtok_r(text, "\n", &p_save_ptr); p != NULL; p = strtok_r(NULL, "\n", &p_save_ptr)) {
        count_sentence = counter(p, ".");
        document[i] = (char ***) malloc(count_sentence * sizeof(char **));

        j = 0;
        for (s = strtok_r(p, ".", &s_save_ptr); s != NULL; s = strtok_r(NULL, ".", &s_save_ptr)) {
            count_word = counter(s, " ");
            document[i][j] = (char **) malloc(count_word * sizeof(char *));
            
            k = 0;
            for (w = strtok_r(s, " ", &w_save_ptr); w != NULL; w = strtok_r(NULL, " ", &w_save_ptr)) {
                document[i][j][k] = strdup(w);
                k++;
            }
            j++;
        }
        i++;
    }

    return document;
}
